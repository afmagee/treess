% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/divideAndConquerSplitProbs.R
\name{divideAndConquerSplitProbs}
\alias{divideAndConquerSplitProbs}
\title{Approximate split probabilities from collections of splits.}
\usage{
divideAndConquerSplitProbs(
  tree.splits,
  range = NULL,
  cutoff = 0.1,
  alpha = 0.05,
  second.pass = TRUE
)
}
\arguments{
\item{tree.splits}{Output of \link{perTreeSplits}.}

\item{range}{Optional argument to define which trees to compute probabilities for, defaults to all trees.}

\item{cutoff}{Minimum split probability target. See details.}

\item{alpha}{Modifies target threshold from cutoff using a one-sided confidence interval with width alpha. Set to NULL if undesired. See details.}

\item{second.pass}{Gets correct probabilities for all splits identified at cost of extra computation. See details.}
}
\value{
Named vector of split (or clade) probabilities.
}
\description{
When there are many trees in the sample, the trees are large, and/or the posterior distribution is diffuse, the number of splits can be very large.
There may be a more tractable number of splits above some probability cutoff.
This function approximates that set of splits, and their probabilities.
The accuracy depends on several settings.
}
\details{
The function operates on many batches of size sqrt(length(tree.splits)) to make the problem of identifying splits with probability >= cutoff easier.

The function first finds the set of target splits, which is all splits which are above a threshold probability on average across all batches.
If second.pass == FALSE, the function then returns these average probabilities.
These will not be exactly correct, and error is likely larger closer to the cutoff.
If second.pass == TRUE, the function then loops back over all batches and compute the actual probabilities of the splits.
This is slower, and may find more splits than second.pass == FALSE.
However, the algorithm is still not guaranteed to find all splits above the cutoff

The thoroughness of the search for the set of splits depends on the actual threshold used, which is a function of alpha and the cutoff.
Specifically, during the first pass the threshold is either cutoff (if alpha == NULL) or the alpha x 100\% confidence interval for proportion = cutoff with sample size sqrt(n).
The smaller alpha is, the more splits which will be retained.
}
\seealso{
\link{splitProbs}, \link{binomialProportionCI}
}
